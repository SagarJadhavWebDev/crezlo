'use client';
import{jsx as e}from"react/jsx-runtime";import{createContext as t,useReducer as o,useCallback as r,useEffect as n,useContext as s,useState as a}from"react";import{toast as i}from"sonner";import"clsx";import"tailwind-merge";import{S3Client as c}from"@aws-sdk/client-s3";import{createHash as l}from"crypto";const p="production"===process.env.NODE_ENV?"https://":"http://",d=process.env.NEXT_PUBLIC_APP_DOMAIN,u=process.env.NEXT_PUBLIC_APP_URL_ACCOUNT||"accounts";process.env.NEXT_PUBLIC_APP_URL_FINANCE,process.env.NEXT_PUBLIC_APP_URL_VR,process.env.NEXT_PUBLIC_APP_URL_COMMUNITY,process.env.NEXT_PUBLIC_APP_URL_WEBSITE,process.env.NEXT_PUBLIC_APP_URL_GENAGENT;const h={APP_DOMAIN:"production"===process.env.NODE_ENV?d:"crezlo.local",APP_URL:{ACCOUNT:`${p}${u}.${d}`},SUBSCRIPTION_TYPE:process.env.NEXT_PUBLIC_SUBSCRIPTION_TYPE,BASE_API_URL:{CORE:process.env.NEXT_PUBLIC_API_URL_CORE,CONTENT:process.env.NEXT_PUBLIC_API_URL_CONTENT,CHAT:process.env.NEXT_PUBLIC_API_URL_CHAT,GENAGENT:process.env.NEXT_PUBLIC_API_GENAGENT_URL,WEBSITE_BUILDER:process.env.NEXT_PUBLIC_WEBSITE_BUILDER_URL,CHANNEL_BUILDER:process.env.NEXT_PUBLIC_CHANNEL_BUILDERL_URL,FINANCE:process.env.NEXT_PUBLIC_FINANCE_URL}};const _=new class{config;constructor(e={}){this.config={defaultPath:"/",defaultSecure:"undefined"!=typeof window&&"https:"===window.location.protocol,defaultDomain:`.${h.APP_DOMAIN}`,...e}}set(e,t,o={expires:1e3}){if("undefined"==typeof document)return console.warn("CookieManager: document is not available (SSR environment)"),!1;try{const r=this.config.prefix?`${this.config.prefix}${e}`:e;let n=`${encodeURIComponent(r)}=${encodeURIComponent(t)}`;if(o.expires)if("number"==typeof o.expires){const e=new Date;e.setTime(e.getTime()+24*o.expires*60*60*1e3),n+=`; expires=${e.toUTCString()}`}else n+=`; expires=${o.expires.toUTCString()}`;void 0!==o.maxAge&&(n+=`; max-age=${o.maxAge}`);const s=o.path??this.config.defaultPath;s&&(n+=`; path=${s}`);const a=o.domain??this.config.defaultDomain;a&&(n+=`; domain=${a}`);(o.secure??this.config.defaultSecure)&&(n+="; secure"),o.httpOnly&&console.warn("CookieManager: httpOnly flag cannot be set via JavaScript");const i=o.sameSite??this.config.defaultSameSite;return i&&(n+=`; samesite=${i}`),console.log("Setting cookie:",n),document.cookie=n,!0}catch(e){return console.error("CookieManager: Error setting cookie:",e),!1}}get(e){if("undefined"==typeof document)return null;try{const t=this.config.prefix?`${this.config.prefix}${e}`:e,o=encodeURIComponent(t),r=document.cookie.split(";");for(let e of r)if(e=e.trim(),e.startsWith(`${o}=`))return decodeURIComponent(e.substring(o.length+1));return null}catch(e){return console.error("CookieManager: Error getting cookie",e),null}}getJSON(e){const t=this.get(e);if(null===t)return null;try{return JSON.parse(t)}catch(e){return console.error("CookieManager: Error parsing JSON cookie",e),null}}setJSON(e,t,o={}){try{const r=JSON.stringify(t);return this.set(e,r,o)}catch(e){return console.error("CookieManager: Error stringifying JSON cookie",e),!1}}remove(e,t={}){return this.set(e,"",{...t,expires:new Date(0),maxAge:0})}has(e){return null!==this.get(e)}getAll(){if("undefined"==typeof document)return{};try{const e={},t=document.cookie.split(";");for(let o of t){o=o.trim();const[t,...r]=o.split("=");if(t&&r.length>0){const o=decodeURIComponent(t),n=decodeURIComponent(r.join("="));e[this.config.prefix&&o.startsWith(this.config.prefix)?o.substring(this.config.prefix.length):o]=n}}return e}catch(e){return console.error("CookieManager: Error getting all cookies",e),{}}}clear(e={}){const t=this.getAll();Object.keys(t).forEach(t=>{this.remove(t,e)})}getSize(e){const t=this.get(e);return null===t?0:new Blob([t]).size}getTotalSize(){return"undefined"==typeof document?0:new Blob([document.cookie]).size}isEnabled(){if("undefined"==typeof document)return!1;try{const e="__cookie_test__";this.set(e,"test");const t=this.has(e);return this.remove(e),t}catch{return!1}}},E=(e,t)=>_.remove(e,t),g=()=>{const e=(t="token",_.getJSON(t));var t;return e?.access_token?e:null},f={request:[],response:[],error:[]};class I{static instances=new Map;config;localInterceptors;constructor(e){this.config=e,this.localInterceptors={request:[],response:[],error:[]}}static getInstance(e){const t=e.baseURL;if(t)return I.instances.has(t)||I.instances.set(t,new I(e)),I.instances.get(t)}static addGlobalRequestInterceptor(e){f.request.push(e)}static addGlobalResponseInterceptor(e){f.response.push(e)}static addGlobalErrorInterceptor(e){f.error.push(e)}addRequestInterceptor(e){this.localInterceptors.request.push(e)}addResponseInterceptor(e){this.localInterceptors.response.push(e)}addErrorInterceptor(e){this.localInterceptors.error.push(e)}async applyInterceptors(e,t){const o=[...f[e],...this.localInterceptors[e]];let r=t;for(const e of o)r=await e(r);return r}buildURL(e,t){const o=new URL(e,this.config.baseURL);return t&&Object.entries(t).forEach(([e,t])=>{o.searchParams.append(e,String(t))}),o.toString()}async request(e,t={}){try{const o=await this.applyInterceptors("request",t),r=this.buildURL(e,o.params),n={"Content-Type":"application/json",Accept:"application/json",...this.config.headers,...o.headers},s={method:o.method||"GET",headers:n,credentials:o.withCredentials??this.config.withCredentials?"include":"same-origin"};o.body&&"GET"!==o.method&&(s.body="string"==typeof o.body?o.body:JSON.stringify(o.body));const a=o.timeout||this.config.timeout||1e4,i=new AbortController,c=setTimeout(()=>i.abort(),a);s.signal=i.signal;const l=await fetch(r,s);let p;clearTimeout(c);const d=l.headers.get("content-type");p=d&&d.includes("application/json")?await l.json():await l.text();const u=p;if(!l.ok||l.status<200||l.status>=300){const e=p;throw await this.applyInterceptors("error",e)}return await this.applyInterceptors("response",u)}catch(e){if(e instanceof Error){const t={message:e.message,code:"REQUEST_ERROR",status_code:500};throw await this.applyInterceptors("error",t)}throw e}}async get(e,t){return this.request(e,{...t,method:"GET"})}async post(e,t,o){return this.request(e,{...o,method:"POST",body:t})}async put(e,t,o){return this.request(e,{...o,method:"PUT",body:t})}async patch(e,t,o){return this.request(e,{...o,method:"PATCH",body:t})}async delete(e,t){return this.request(e,{...t,method:"DELETE"})}}const m=h.BASE_API_URL;I.addGlobalErrorInterceptor(async e=>(console.log("❌ API ERROR:",e),e?.message&&i.error(e.message),e)),I.addGlobalResponseInterceptor(async e=>(console.log("✅ Response received:",e),e?.message&&i.success(e.message),e));const T={client:{addGlobalRequestInterceptor:I.addGlobalRequestInterceptor,addGlobalResponseInterceptor:I.addGlobalResponseInterceptor,addGlobalErrorInterceptor:I.addGlobalErrorInterceptor,getInstance:I.getInstance},...Object.fromEntries(Object.entries(m).map(([e,t])=>{return[e,(o=t,I.getInstance({baseURL:o}))];var o}))},R=process.env.NEXT_PUBLIC_R2_ACCOUNT_ID,y=process.env.NEXT_PUBLIC_AWS_S3_PUBLIC_BUCKET,C=process.env.NEXT_PUBLIC_AWS_ACCESS_KEY_ID,U=process.env.NEXT_PUBLIC_AWS_SECRET_ACCESS_KEY;if(!(R&&y&&C&&U))throw new Error("Missing required environment variables for R2 configuration");l("sha256").update(U).digest("hex");const S=new c({endpoint:`https://${R}.r2.cloudflarestorage.com`,region:"auto",credentials:{accessKeyId:C,secretAccessKey:U},signatureVersion:"v4"});console.log("s3Client  Data",S.config.endpoint,S.config.credentials);const A={profile:"profile"},N={tokenStorage:{cookieOptions:{secure:!0,sameSite:"lax",path:"/"}},redirectOnUnauthorized:h.APP_URL.ACCOUNT+"/login",isAccountDomain:!1,onAuthStateChange:()=>{}},P={user:null,token:{access_token:null,expires_at:null,token_type:null},isAuthenticated:!1,isLoading:!0,error:null},L=(e,t)=>{switch(t.type){case"SET_LOADING":return{...e,isLoading:t.payload};case"SET_ERROR":return{...e,error:t.payload,isLoading:!1};case"SET_USER":return{...e,user:t.payload,isAuthenticated:!!t.payload,error:null};case"SET_TOKENS":return{...e,token:t.payload};case"SET_AUTHENTICATED":return{...e,isAuthenticated:t.payload};case"UPDATE_USER":return{...e,user:e.user?{...e.user,...t.payload}:null};case"CLEAR_AUTH":return{...P,isLoading:!1};default:return e}},O=t(void 0),b=({children:t,config:s})=>{const[a,i]=o(L,P),c={...N,...s??{}},l=r(e=>{var t,o,r;t="token",o=e,_.setJSON(t,o,r),((e,t,o)=>{_.set(e,t,o)})("auth",e?.access_token),i({type:"SET_TOKENS",payload:e})},[]),p=r(e=>{(e=>{E("token"),E("auth"),e?.()})(()=>{i({type:"CLEAR_AUTH"}),e?.()})},[]),d=r(()=>{const e=g();return e?.access_token||((()=>{if("undefined"!=typeof window){const e=window?.location?.hostname;return e?.split(".")?.[0]}})(),c?.isAccountDomain?window.location.pathname="/login":window.location.assign(c.redirectOnUnauthorized+`?redirect_url=${window.location.href}`)),e},[]);n(()=>{T.client.addGlobalRequestInterceptor(async e=>{const t=d();return t?.access_token&&(e.headers={...e.headers,Authorization:`Bearer ${t?.access_token}`}),e}),T.client.addGlobalErrorInterceptor(async e=>{if(401===e.status_code)try{p(()=>{})}catch(e){console.error("Token refresh failed:",e),i({type:"SET_ERROR",payload:"Session expired. Please log in again."})}return e}),u()},[]);const u=r(async()=>{i({type:"SET_LOADING",payload:!0}),i({type:"SET_ERROR",payload:null}),T.CORE.get(A.profile).then(e=>{const t=e?.data?.seller;h(t)}).catch(e=>{i({type:"SET_ERROR",payload:e.message||"Login failed"})}).finally(()=>{i({type:"SET_LOADING",payload:!1})})},[]),h=r(e=>{i({type:"SET_USER",payload:e})},[]);r(()=>{i({type:"SET_ERROR",payload:null})},[]),n(()=>{c.onAuthStateChange(a)},[a,c.onAuthStateChange]);const f={...a,setUser:h,getToken:d,updateToken:l,logout:p,refreshUser:u,config:c};return e(O.Provider,{value:f,children:t})},w=()=>s(O),v=t({sidebarOpen:!0,setSidebarOpen:e=>{},sidebarExpanded:!0,setSidebarExpanded:e=>{}});function k({children:t}){const[o,r]=a(!0),[n,s]=a(!0);return e(v.Provider,{value:{sidebarOpen:o,setSidebarOpen:r,sidebarExpanded:n,setSidebarExpanded:s},children:t})}const B=()=>s(v);export{k as AppProvider,O as AuthContext,b as AuthProvider,B as useAppProvider,w as useAuth};
//# sourceMappingURL=index.esm.js.map
