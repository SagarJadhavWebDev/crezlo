{"version":3,"file":"index.esm.js","sources":["../../src/utils/apiClient.ts","../../src/utils/cookieManager.ts","../../src/utils/use-window-width.tsx","../../src/constants/env.constants.ts","../../src/utils/apiInstance.ts","../../src/utils/auth.utils.ts"],"sourcesContent":["export interface ApiClientConfig {\r\n  baseURL: string;\r\n  timeout?: number;\r\n  headers?: Record<string, string>;\r\n  withCredentials?: boolean;\r\n}\r\n\r\nexport interface ApiResponse<T = any> {\r\n  data: T;\r\n  status: number;\r\n  statusText: string;\r\n  headers: Record<string, string>;\r\n}\r\n\r\nexport interface ApiError {\r\n  message: string;\r\n  status?: number;\r\n  statusText?: string;\r\n  data?: any;\r\n}\r\n\r\nexport type RequestMethod = \"GET\" | \"POST\" | \"PUT\" | \"PATCH\" | \"DELETE\";\r\n\r\nexport interface RequestConfig {\r\n  method?: RequestMethod;\r\n  headers?: Record<string, string>;\r\n  body?: any;\r\n  params?: Record<string, string | number | boolean>;\r\n  timeout?: number;\r\n  withCredentials?: boolean;\r\n}\r\n\r\ntype InterceptorType = {\r\n  request: Array<(config: RequestConfig) => RequestConfig | Promise<RequestConfig>>;\r\n  response: Array<(response: ApiResponse) => ApiResponse | Promise<ApiResponse>>;\r\n  error: Array<(error: ApiError) => ApiError | Promise<ApiError>>;\r\n};\r\n\r\nconst GlobalInterceptors: InterceptorType = {\r\n  request: [],\r\n  response: [],\r\n  error: [],\r\n};\r\n\r\nexport class ApiClient {\r\n  private static instances: Map<string, ApiClient> = new Map();\r\n\r\n  private config: ApiClientConfig;\r\n  private localInterceptors: InterceptorType;\r\n\r\n  private constructor(config: ApiClientConfig) {\r\n    this.config = config;\r\n    this.localInterceptors = {\r\n      request: [],\r\n      response: [],\r\n      error: [],\r\n    };\r\n  }\r\n\r\n  // Singleton per unique key (e.g., baseURL or custom ID)\r\n  static getInstance(config: ApiClientConfig): ApiClient {\r\n    const key = config.baseURL;\r\n    if (!key) throw new Error(\"ApiClient config must have an 'id' or 'baseURL' to use as key\");\r\n\r\n    if (!ApiClient.instances.has(key)) {\r\n      ApiClient.instances.set(key, new ApiClient(config));\r\n    }\r\n    return ApiClient.instances.get(key)!;\r\n  }\r\n\r\n  static addGlobalRequestInterceptor(interceptor: (config: RequestConfig) => RequestConfig | Promise<RequestConfig>) {\r\n    GlobalInterceptors.request.push(interceptor);\r\n  }\r\n\r\n  static addGlobalResponseInterceptor(interceptor: (response: ApiResponse) => ApiResponse | Promise<ApiResponse>) {\r\n    GlobalInterceptors.response.push(interceptor);\r\n  }\r\n\r\n  static addGlobalErrorInterceptor(interceptor: (error: ApiError) => ApiError | Promise<ApiError>) {\r\n    GlobalInterceptors.error.push(interceptor);\r\n  }\r\n\r\n  // Local (instance-level) interceptors\r\n  addRequestInterceptor(interceptor: (config: RequestConfig) => RequestConfig | Promise<RequestConfig>) {\r\n    this.localInterceptors.request.push(interceptor);\r\n  }\r\n\r\n  addResponseInterceptor(interceptor: (response: ApiResponse) => ApiResponse | Promise<ApiResponse>) {\r\n    this.localInterceptors.response.push(interceptor);\r\n  }\r\n\r\n  addErrorInterceptor(interceptor: (error: ApiError) => ApiError | Promise<ApiError>) {\r\n    this.localInterceptors.error.push(interceptor);\r\n  }\r\n\r\n  private async applyInterceptors<T>(type: keyof InterceptorType, input: T): Promise<T> {\r\n    const all = [...GlobalInterceptors[type], ...this.localInterceptors[type]];\r\n    let result = input;\r\n\r\n    for (const fn of all) {\r\n      result = (await fn(result as any)) as unknown as T;\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  // Build URL with query parameters\r\n  private buildURL(endpoint: string, params?: Record<string, string | number | boolean>): string {\r\n    const url = new URL(endpoint, this.config.baseURL);\r\n\r\n    if (params) {\r\n      Object.entries(params).forEach(([key, value]) => {\r\n        url.searchParams.append(key, String(value));\r\n      });\r\n    }\r\n\r\n    return url.toString();\r\n  }\r\n\r\n  // Main request method\r\n  async request<T = any>(endpoint: string, config: RequestConfig = {}): Promise<ApiResponse<T>> {\r\n    try {\r\n      // Apply request interceptors\r\n      const modifiedConfig = await this.applyInterceptors(\"request\", config);\r\n\r\n      // Build URL\r\n      const url = this.buildURL(endpoint, modifiedConfig.params);\r\n\r\n      // Prepare headers\r\n      const headers = {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n        ...this.config.headers,\r\n        ...modifiedConfig.headers,\r\n      };\r\n\r\n      // Prepare fetch options\r\n      const fetchOptions: RequestInit = {\r\n        method: modifiedConfig.method || \"GET\",\r\n        headers,\r\n        credentials: modifiedConfig.withCredentials ?? this.config.withCredentials ? \"include\" : \"same-origin\",\r\n      };\r\n\r\n      // Add body for non-GET requests\r\n      if (modifiedConfig.body && modifiedConfig.method !== \"GET\") {\r\n        fetchOptions.body = typeof modifiedConfig.body === \"string\" ? modifiedConfig.body : JSON.stringify(modifiedConfig.body);\r\n      }\r\n\r\n      // Set up timeout\r\n      const timeout = modifiedConfig.timeout || this.config.timeout || 10000;\r\n      const controller = new AbortController();\r\n      const timeoutId = setTimeout(() => controller.abort(), timeout);\r\n\r\n      fetchOptions.signal = controller.signal;\r\n\r\n      // Make the request\r\n      const response = await fetch(url, fetchOptions);\r\n      clearTimeout(timeoutId);\r\n\r\n      // Parse response\r\n      let data: T;\r\n      const contentType = response.headers.get(\"content-type\");\r\n\r\n      if (contentType && contentType.includes(\"application/json\")) {\r\n        data = await response.json();\r\n      } else {\r\n        data = (await response.text()) as unknown as T;\r\n      }\r\n\r\n      // Create response object\r\n      const apiResponse: ApiResponse<T> = {\r\n        data,\r\n        status: response.status,\r\n        statusText: response.statusText,\r\n        headers: Object.fromEntries(response.headers.entries()),\r\n      };\r\n\r\n      // Check if response is successful\r\n      if (!response.ok) {\r\n        const error: ApiError = {\r\n          message: `Request failed with status ${response.status}`,\r\n          status: response.status,\r\n          statusText: response.statusText,\r\n          data,\r\n        };\r\n\r\n        throw await this.applyInterceptors(\"error\", error);\r\n      }\r\n\r\n      // Apply response interceptors\r\n      return await this.applyInterceptors(\"response\", apiResponse);\r\n    } catch (error) {\r\n      if (error instanceof Error) {\r\n        const apiError: ApiError = {\r\n          message: error.message,\r\n        };\r\n\r\n        throw await this.applyInterceptors(\"error\", apiError);\r\n      }\r\n\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Convenience methods\r\n  async get<T = any>(endpoint: string, config?: Omit<RequestConfig, \"method\">): Promise<ApiResponse<T>> {\r\n    return this.request<T>(endpoint, { ...config, method: \"GET\" });\r\n  }\r\n\r\n  async post<T = any>(endpoint: string, data?: any, config?: Omit<RequestConfig, \"method\" | \"body\">): Promise<ApiResponse<T>> {\r\n    return this.request<T>(endpoint, { ...config, method: \"POST\", body: data });\r\n  }\r\n\r\n  async put<T = any>(endpoint: string, data?: any, config?: Omit<RequestConfig, \"method\" | \"body\">): Promise<ApiResponse<T>> {\r\n    return this.request<T>(endpoint, { ...config, method: \"PUT\", body: data });\r\n  }\r\n\r\n  async patch<T = any>(endpoint: string, data?: any, config?: Omit<RequestConfig, \"method\" | \"body\">): Promise<ApiResponse<T>> {\r\n    return this.request<T>(endpoint, { ...config, method: \"PATCH\", body: data });\r\n  }\r\n\r\n  async delete<T = any>(endpoint: string, config?: Omit<RequestConfig, \"method\">): Promise<ApiResponse<T>> {\r\n    return this.request<T>(endpoint, { ...config, method: \"DELETE\" });\r\n  }\r\n}\r\n\r\n// Create a default API client instance\r\nexport const createApiClient = (config: ApiClientConfig): ApiClient => {\r\n  return ApiClient.getInstance(config);\r\n};\r\n\r\n// Utility function for quick API calls without creating a client\r\nexport const apiCall = async <T = any>(url: string, config: RequestConfig & { baseURL?: string } = {}): Promise<ApiResponse<T>> => {\r\n  const { baseURL = \"\", ...requestConfig } = config;\r\n  const client = ApiClient.getInstance({ baseURL });\r\n  return client.request<T>(url, requestConfig);\r\n};\r\n","export interface CookieOptions {\r\n  expires?: Date | number; // Date object or days from now\r\n  maxAge?: number; // seconds\r\n  domain?: string;\r\n  path?: string;\r\n  secure?: boolean;\r\n  httpOnly?: boolean;\r\n  sameSite?: 'strict' | 'lax' | 'none';\r\n}\r\n\r\nexport interface CookieManagerConfig {\r\n  defaultPath?: string;\r\n  defaultDomain?: string;\r\n  defaultSecure?: boolean;\r\n  defaultSameSite?: 'strict' | 'lax' | 'none';\r\n  prefix?: string; // Prefix for all cookie names\r\n}\r\n\r\nexport class CookieManager {\r\n  private config: CookieManagerConfig;\r\n\r\n  constructor(config: CookieManagerConfig = {}) {\r\n    this.config = {\r\n      defaultPath: '/',\r\n      defaultSecure: typeof window !== 'undefined' ? window.location.protocol === 'https:' : false,\r\n      defaultSameSite: 'lax',\r\n      ...config,\r\n    };\r\n  }\r\n\r\n  // Set a cookie\r\n  set(name: string, value: string, options: CookieOptions = {}): boolean {\r\n    if (typeof document === 'undefined') {\r\n      console.warn('CookieManager: document is not available (SSR environment)');\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      const cookieName = this.config.prefix ? `${this.config.prefix}${name}` : name;\r\n      let cookieString = `${encodeURIComponent(cookieName)}=${encodeURIComponent(value)}`;\r\n\r\n      // Handle expires\r\n      if (options.expires) {\r\n        if (typeof options.expires === 'number') {\r\n          // Convert days to date\r\n          const date = new Date();\r\n          date.setTime(date.getTime() + (options.expires * 24 * 60 * 60 * 1000));\r\n          cookieString += `; expires=${date.toUTCString()}`;\r\n        } else {\r\n          cookieString += `; expires=${options.expires.toUTCString()}`;\r\n        }\r\n      }\r\n\r\n      // Handle maxAge\r\n      if (options.maxAge !== undefined) {\r\n        cookieString += `; max-age=${options.maxAge}`;\r\n      }\r\n\r\n      // Handle path\r\n      const path = options.path ?? this.config.defaultPath;\r\n      if (path) {\r\n        cookieString += `; path=${path}`;\r\n      }\r\n\r\n      // Handle domain\r\n      const domain = options.domain ?? this.config.defaultDomain;\r\n      if (domain) {\r\n        cookieString += `; domain=${domain}`;\r\n      }\r\n\r\n      // Handle secure\r\n      const secure = options.secure ?? this.config.defaultSecure;\r\n      if (secure) {\r\n        cookieString += '; secure';\r\n      }\r\n\r\n      // Handle httpOnly (note: this can't be set via JavaScript)\r\n      if (options.httpOnly) {\r\n        console.warn('CookieManager: httpOnly flag cannot be set via JavaScript');\r\n      }\r\n\r\n      // Handle sameSite\r\n      const sameSite = options.sameSite ?? this.config.defaultSameSite;\r\n      if (sameSite) {\r\n        cookieString += `; samesite=${sameSite}`;\r\n      }\r\n\r\n      document.cookie = cookieString;\r\n      return true;\r\n    } catch (error) {\r\n      console.error('CookieManager: Error setting cookie', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // Get a cookie value\r\n  get(name: string): string | null {\r\n    if (typeof document === 'undefined') {\r\n      return null;\r\n    }\r\n\r\n    try {\r\n      const cookieName = this.config.prefix ? `${this.config.prefix}${name}` : name;\r\n      const encodedName = encodeURIComponent(cookieName);\r\n      const cookies = document.cookie.split(';');\r\n\r\n      for (let cookie of cookies) {\r\n        cookie = cookie.trim();\r\n        if (cookie.startsWith(`${encodedName}=`)) {\r\n          return decodeURIComponent(cookie.substring(encodedName.length + 1));\r\n        }\r\n      }\r\n\r\n      return null;\r\n    } catch (error) {\r\n      console.error('CookieManager: Error getting cookie', error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  // Get a cookie value and parse as JSON\r\n  getJSON<T = any>(name: string): T | null {\r\n    const value = this.get(name);\r\n    if (value === null) return null;\r\n\r\n    try {\r\n      return JSON.parse(value);\r\n    } catch (error) {\r\n      console.error('CookieManager: Error parsing JSON cookie', error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  // Set a cookie with JSON value\r\n  setJSON(name: string, value: any, options: CookieOptions = {}): boolean {\r\n    try {\r\n      const jsonString = JSON.stringify(value);\r\n      return this.set(name, jsonString, options);\r\n    } catch (error) {\r\n      console.error('CookieManager: Error stringifying JSON cookie', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // Remove a cookie\r\n  remove(name: string, options: Pick<CookieOptions, 'path' | 'domain'> = {}): boolean {\r\n    return this.set(name, '', {\r\n      ...options,\r\n      expires: new Date(0), // Set to past date\r\n      maxAge: 0,\r\n    });\r\n  }\r\n\r\n  // Check if a cookie exists\r\n  has(name: string): boolean {\r\n    return this.get(name) !== null;\r\n  }\r\n\r\n  // Get all cookies as an object\r\n  getAll(): Record<string, string> {\r\n    if (typeof document === 'undefined') {\r\n      return {};\r\n    }\r\n\r\n    try {\r\n      const cookies: Record<string, string> = {};\r\n      const cookieStrings = document.cookie.split(';');\r\n\r\n      for (let cookie of cookieStrings) {\r\n        cookie = cookie.trim();\r\n        const [encodedName, ...valueParts] = cookie.split('=');\r\n        \r\n        if (encodedName && valueParts.length > 0) {\r\n          const name = decodeURIComponent(encodedName);\r\n          const value = decodeURIComponent(valueParts.join('='));\r\n          \r\n          // Remove prefix if it exists\r\n          const finalName = this.config.prefix && name.startsWith(this.config.prefix)\r\n            ? name.substring(this.config.prefix.length)\r\n            : name;\r\n            \r\n          cookies[finalName] = value;\r\n        }\r\n      }\r\n\r\n      return cookies;\r\n    } catch (error) {\r\n      console.error('CookieManager: Error getting all cookies', error);\r\n      return {};\r\n    }\r\n  }\r\n\r\n  // Clear all cookies (only those with the same prefix if configured)\r\n  clear(options: Pick<CookieOptions, 'path' | 'domain'> = {}): void {\r\n    const allCookies = this.getAll();\r\n    \r\n    Object.keys(allCookies).forEach(name => {\r\n      this.remove(name, options);\r\n    });\r\n  }\r\n\r\n  // Get cookie size in bytes\r\n  getSize(name: string): number {\r\n    const value = this.get(name);\r\n    if (value === null) return 0;\r\n    \r\n    return new Blob([value]).size;\r\n  }\r\n\r\n  // Get total cookies size\r\n  getTotalSize(): number {\r\n    if (typeof document === 'undefined') return 0;\r\n    \r\n    return new Blob([document.cookie]).size;\r\n  }\r\n\r\n  // Check if cookies are enabled\r\n  isEnabled(): boolean {\r\n    if (typeof document === 'undefined') return false;\r\n    \r\n    try {\r\n      const testCookie = '__cookie_test__';\r\n      this.set(testCookie, 'test');\r\n      const isEnabled = this.has(testCookie);\r\n      this.remove(testCookie);\r\n      return isEnabled;\r\n    } catch {\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\r\n// Default cookie manager instance\r\nexport const cookieManager = new CookieManager();\r\n\r\n// Utility functions for quick access\r\nexport const setCookie = (name: string, value: string, options?: CookieOptions): boolean => {\r\n  return cookieManager.set(name, value, options);\r\n};\r\n\r\nexport const getCookie = (name: string): string | null => {\r\n  return cookieManager.get(name);\r\n};\r\n\r\nexport const getCookieJSON = <T = any>(name: string): T | null => {\r\n  return cookieManager.getJSON<T>(name);\r\n};\r\n\r\nexport const setCookieJSON = (name: string, value: any, options?: CookieOptions): boolean => {\r\n  return cookieManager.setJSON(name, value, options);\r\n};\r\n\r\nexport const removeCookie = (name: string, options?: Pick<CookieOptions, 'path' | 'domain'>): boolean => {\r\n  return cookieManager.remove(name, options);\r\n};\r\n\r\nexport const hasCookie = (name: string): boolean => {\r\n  return cookieManager.has(name);\r\n};\r\n\r\nexport const getAllCookies = (): Record<string, string> => {\r\n  return cookieManager.getAll();\r\n};\r\n\r\nexport const clearAllCookies = (options?: Pick<CookieOptions, 'path' | 'domain'>): void => {\r\n  return cookieManager.clear(options);\r\n};\r\n\r\nexport const isCookiesEnabled = (): boolean => {\r\n  return cookieManager.isEnabled();\r\n};\r\n\r\n// Create a custom cookie manager with specific configuration\r\nexport const createCookieManager = (config: CookieManagerConfig): CookieManager => {\r\n  return new CookieManager(config);\r\n};\r\n\r\n","\r\n\r\nimport { useState, useEffect } from 'react'\r\n\r\nexport const useWindowWidth = () => {\r\n  const [windowWidth, setWindowWidth] = useState<number | undefined>(\r\n    typeof window !== 'undefined' ? window.innerWidth : undefined\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (typeof window === 'undefined') return;\r\n\r\n    const handleResize = () => {\r\n      setWindowWidth(window.innerWidth);\r\n    };\r\n\r\n    // Add event listener\r\n    window.addEventListener('resize', handleResize);\r\n    \r\n    // Set initial width\r\n    handleResize();\r\n\r\n    // Remove event listener on cleanup\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []); // Empty array ensures effect is only run on mount and unmount\r\n  \r\n  return windowWidth;\r\n};","export const envConstants = {\r\n  BASE_API_URL: {\r\n    CORE: process.env.NEXT_PUBLIC_API_URL_CORE,\r\n    CONTENT: process.env.NEXT_PUBLIC_API_URL_CONTENT,\r\n    CHAT: process.env.NEXT_PUBLIC_API_URL_CHAT,\r\n    GENAGENT: process.env.NEXT_PUBLIC_API_GENAGENT_URL,\r\n    WEBSITE_BUILDER: process.env.NEXT_PUBLIC_WEBSITE_BUILDER_URL,\r\n    CHANNEL_BUILDER: process.env.NEXT_PUBLIC_CHANNEL_BUILDERL_URL,\r\n    FINANCE: process.env.NEXT_PUBLIC_FINANCE_URL,\r\n  },\r\n};\r\n","import { envConstants } from \"../constants\";\r\nimport { AuthToken } from \"../types\";\r\nimport { ApiClient } from \"./apiClient\";\r\nimport { getCookieJSON } from \"./cookieManager\";\r\n\r\ntype BaseUrlType = keyof typeof envConstants.BASE_API_URL;\r\n\r\nconst baseUrls: Record<BaseUrlType, string> = envConstants.BASE_API_URL;\r\n\r\nconst apiClient = ApiClient.getInstance({\r\n  baseURL: baseUrls.CORE,\r\n});\r\n\r\n// REQUEST INTERCEPTOR\r\nApiClient.addGlobalRequestInterceptor(async (config) => {\r\n  const token = getCookieJSON<AuthToken | null>(\"token\");\r\n  if (token?.access_token) {\r\n    config.headers = {\r\n      ...config.headers,\r\n      Authorization: `Bearer ${token.access_token}`,\r\n    };\r\n  }\r\n  return config;\r\n});\r\n\r\n// RESPONSE INTERCEPTOR\r\nApiClient.addGlobalErrorInterceptor(async (error) => {\r\n  //   if (error.status === 401 && mergedConfig.autoRefresh) {\r\n  //     try {\r\n  //       await refreshToken();\r\n  //       // Retry the original request would need to be implemented here\r\n  //     } catch (refreshError) {\r\n  //       await logout();\r\n  //     }\r\n  //   }\r\n  return error;\r\n});\r\n\r\nApiClient.addGlobalResponseInterceptor(async (response) => {\r\n  // Handle specific response status codes or data transformations here\r\n  if (response.status === 401) {\r\n    // Handle unauthorized access, e.g., redirect to login\r\n    console.error(\"Unauthorized access - redirecting to login\");\r\n    // You can implement a redirect or logout logic here\r\n  }\r\n  return response;\r\n});\r\n\r\nconst createApiMethods = (client: ApiClient) => ({\r\n  client,\r\n  get: client.get,\r\n  post: client.post,\r\n  put: client.put,\r\n  patch: client.patch,\r\n  del: client.delete,\r\n});\r\n\r\nconst createClient = (baseURL: string): ApiClient => {\r\n  return ApiClient.getInstance({ baseURL });\r\n};\r\n\r\nconst extendedClient = {\r\n  addGlobalRequestInterceptor: ApiClient.addGlobalRequestInterceptor,\r\n  addGlobalResponseInterceptor: ApiClient.addGlobalResponseInterceptor,\r\n  addGlobalErrorInterceptor: ApiClient.addGlobalErrorInterceptor,\r\n  getInstance: ApiClient.getInstance,\r\n};\r\n\r\ntype ApiServiceMap = Record<BaseUrlType, ReturnType<typeof createApiMethods>>;\r\n\r\n// @ts-ignore\r\nconst ApiInstance: ApiServiceMap & {\r\n  client: typeof extendedClient;\r\n} = {\r\n  client: extendedClient,\r\n  ...Object.fromEntries(Object.entries(baseUrls).map(([name, url]) => [name, createClient(url)])),\r\n};\r\n\r\nexport { ApiInstance };\r\n","import { AuthToken } from \"../types\";\r\nimport { getCookieJSON, removeCookie } from \"./cookieManager\";\r\n\r\nexport const getAuthToken = (): AuthToken | null => {\r\n  const token = getCookieJSON(\"token\");\r\n  if (token?.access_token) {\r\n    return token;\r\n  }\r\n  return null;\r\n};\r\n\r\nexport const logoutAuthUser = (callback?: () => void): void => {\r\n  removeCookie(\"token\");\r\n  callback?.();\r\n};\r\n"],"names":[],"mappings":"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"}